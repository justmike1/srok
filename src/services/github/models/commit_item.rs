/*
 * GitHub Commit Search
 *
 * Minimal spec exposing only the /search/commits endpoint from GitHub v3 REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::services::github::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CommitItem {
    #[serde(rename = "sha")]
    pub sha: String,
    #[serde(rename = "html_url")]
    pub html_url: String,
    #[serde(rename = "commit")]
    pub commit: Box<models::CommitDetail>,
    #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
    pub author: Option<Box<models::AuthorSummary>>,
}

impl CommitItem {
    pub fn new(sha: String, html_url: String, commit: models::CommitDetail) -> CommitItem {
        CommitItem {
            sha,
            html_url,
            commit: Box::new(commit),
            author: None,
        }
    }
}

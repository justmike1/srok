name: "Build & Push to registry"
description: "Build & Push docker images to registry"
inputs:
  DOCKER_REGISTRY_USER:
    description: "dockerhub cred username"
    required: true
  ORGANIZATION_NAME:
    description: "dockerhub registry org name"
    required: true
  DOCKER_REGISTRY_TOKEN:
    description: "dockerhub cred access token"
    required: true
  SERVICE:
    description: "Which service to build?"
    required: true
  PLATFORM:
    description: "Which architecture to build?"
    required: false
    default: "linux/amd64,linux/arm64"
  BRANCH:
    description: "What branch triggered this build?"
    required: true
  DOCKERFILE_BASE_PATH:
    description: "The path of the dockerfile"
    required: true
    default: "./"
  DOCKERFILE_CONTEXT_PATH:
    description: "The path context of the build"
    required: false
    default: "."
  DOCKERFILE_FILE_NAME:
    description: "The name of the dockerfile"
    required: false
    default: "Dockerfile"
  PROJECT_VERSION:
    description: "The date and branch of the commit | AKA the image tag"
    required: true
  BUILD_ARGS:
    description: "docker --build-arg"
    required: false

runs:
  using: "composite"
  steps:
    - uses: docker/login-action@v3
      with:
        username: ${{ inputs.DOCKER_REGISTRY_USER }}
        password: ${{ inputs.DOCKER_REGISTRY_TOKEN }}
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Setup Docker image tags
      id: prep
      shell: bash
      env:
        IMAGE_NAME: "${{ inputs.ORGANIZATION_NAME }}/${{ inputs.SERVICE }}"
      run: |
        BRANCH_TAG="${{ env.IMAGE_NAME }}:${{ inputs.BRANCH }}-latest"
        VERSION_TAG="${{ env.IMAGE_NAME }}:${{ inputs.PROJECT_VERSION }}"
        echo "BRANCH_TAG=$BRANCH_TAG" >> $GITHUB_OUTPUT
        echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_OUTPUT
    - name: Setup Docker build context
      id: prep-context
      shell: bash
      run: |
        if [ -z "${{ inputs.DOCKERFILE_CONTEXT_PATH }}" ]; then
            export DOCKERFILE_CONTEXT="${{ inputs.DOCKERFILE_BASE_PATH }}."
          else
            export DOCKERFILE_CONTEXT="${{ inputs.DOCKERFILE_CONTEXT_PATH }}"
        fi
        echo "DOCKERFILE_CONTEXT=$DOCKERFILE_CONTEXT" >> $GITHUB_OUTPUT
    - name: Build and push
      uses: docker/build-push-action@v6
      continue-on-error: true
      id: buildx1
      with:
        context: ${{ steps.prep-context.outputs.DOCKERFILE_CONTEXT }}
        push: true
        platforms: ${{ inputs.PLATFORM }}
        tags: ${{ steps.prep.outputs.BRANCH_TAG }},${{ steps.prep.outputs.VERSION_TAG }}
        file: ${{ inputs.DOCKERFILE_BASE_PATH }}${{ inputs.DOCKERFILE_FILE_NAME }}
        build-args: ${{ inputs.BUILD_ARGS }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    # This is a retry workaround for the docker buildx action until https://github.com/docker/build-push-action/issues/719 is resolved
    - name: Wait to retry
      shell: bash
      if: steps.buildx1.outcome != 'success'
      run: |
        sleep 30
    - name: Build and push
      uses: docker/build-push-action@v6
      if: steps.buildx1.outcome != 'success'
      with:
        context: ${{ steps.prep-context.outputs.DOCKERFILE_CONTEXT }}
        push: true
        platforms: ${{ inputs.PLATFORM }}
        tags: ${{ steps.prep.outputs.BRANCH_TAG }},${{ steps.prep.outputs.VERSION_TAG }}
        file: ${{ inputs.DOCKERFILE_BASE_PATH }}${{ inputs.DOCKERFILE_FILE_NAME }}
        build-args: ${{ inputs.BUILD_ARGS }}
        no-cache: true
